rules_version = '2'
service cloud.firestore{
    match /databases/{database}/documents {
      match /{document=**} {
          match /users/{userId}{
              allow read: if request.auth.uid == userId;
              allow create: if request.auth.uid != null;

              match /chats/{chatId}{
                  allow read : if request.auth.uid == userId;
                  allow create : if request.auth.uid != null;

                  match /messages/{messageId}{
                      allow read : isEither(userId, chatId);
                      allow create : isEither(userId, chatId) && request.time == request.resource.data.createdAt;
                  }
              }

              match /sentRequests/{requestId}{
                  allow read,create: if request.auth.uid == userId;
                  allow delete : if request.auth.uid == userId || request.auth.uid == requestId;
                  allow update : if false;
              }

              match /receivedRequests/{requestId}{
                allow read, delete : if request.auth.uid == userId;
                allow create: if request.auth.uid != null;
                allow update : if false;
              }

              function isEither(userId, chatId){
                  let isValid = request.auth.uid != null;
                  let isCurrentUser = request.auth.uid == userId;
                  let isSender = request.auth.uid == chatId;

                  return isValid && (isCurrentUser || isSender);
              }
        }
      }
    }
}